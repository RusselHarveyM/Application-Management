@model Basecode.Data.ViewModels.JobOpeningViewModel

@{
    ViewData["Title"] = "Job Details";
}


<style>
    .job-details-container {
        border: 1px solid lightgray;
        padding: 3rem;
        margin: 0 auto;
        margin-top: 3rem;
        border-radius: 9px;
        width: 80%;
    }

    p {
        margin-top: none;
        margin-bottom: none;
    }

    .header-cont {
        display: flex;
        justify-content: space-between;
        width: 100%;
        margin-bottom: 1.6rem;
    }

    .header-title {
        display: flex;
        align-items: center;
    }

        .header-title img {
            width: 40px;
            height: 40px;
            object-fit: cover;
            margin-right: 10px;
        }

        .header-title h2 {
            margin: 0;
        }

    .update-button,
    .apply-now-button,
    .delete-button {
        color: #fff;
        border: none;
        border-radius: 7px;
        text-decoration: none;
        padding: 0.6rem 0.4rem;
        height: fit-content;
    }

    .update-button {
        background-color: dodgerblue;
    }

    .delete-button {
        background-color: lightgrey;
        width: 100%;
    }

    .apply-now-button {
        background-color: red
    }

        .apply-now-button:hover,
        .update-button:hover,
        .delete-button:hover {
            color: #fff;
        }

    .location {
        display: flex;
        gap: 2px;
        align-items: center;
        padding: 0;
        margin: 0;
    }

    .locContainer {
        margin-bottom: 1rem;
    }

    .actions-btn {
        display: flex;
        text-align: center;
        justify-content:space-between;
    }

    .admin-btn{
        display:flex;
        gap: 0.5rem;
    }

    .back-btn {
        text-decoration: none;
        padding: 0.6rem 0.4rem;
        text-align: center;
        background-color: #FF0000;
        border-radius: 0.5rem;
        color: #fff;
        height: fit-content;
    }

        .back-btn:hover {
            color: #fff
        }

    .employment-work-container {
        display: flex;
        gap: 1rem;
    }

        .employment-work-container * {
            background-color: #F3F4F6FF;
            color: #323743FF;
            padding: 5px 3px;
            border-radius: 5px;
        }

    .qualification-item {
        display: flex;
        align-items: center;
        margin-bottom: 0.5rem;
    }

        .qualification-item img,
        .responsibility-item img {
            width: 20px;
            height: 20px;
            margin-right: 10px;
        }

    .responsibility-item {
        display: flex;
        align-items: center;
        margin-bottom: 0.5rem;
    }
</style>

<div class="actions-btn">
    <a asp-action="Index" class="back-btn">Go Back</a>
    <div class = "admin-btn">
        @*Admin view*@
        <form asp-controller="Job" asp-action="Delete" method="post">
            <input type="hidden" name="id" value="@Model.Id" />
            <input type="submit" value="Delete" class="delete-button" />
        </form>
        <a class="update-button" asp-controller="Job" asp-action="UpdateView" asp-route-id="@Model.Id">Update</a>
    </div>
</div>

<div class="job-details-container">
    <div class="header-cont">
        <div class="header-title">
            <img src="~/images/job-icon-dummy.png" />
            <h2>@Model.Title</h2>
        </div>
        <a class="apply-now-button" asp-controller="PublicApplicationForm" asp-action="Index">Apply Now</a>
    </div>

    <div class="tags-container">
        <div class="location locContainer">
            <img src="~/images/location-icon.png" alt="Location Icon" class="location-icon">
            <p class="location">@Model.Location</p>
        </div>
        <div class="employment-work-container">
            <p class="employment-type">@Model.EmploymentType</p>
            <p class="work-setup">@Model.WorkSetup</p>
        </div>
    </div>
    <div class="job-qualifications">
        <h5>Job Qualifications</h5>
        @if (Model.Qualifications != null && Model.Qualifications.Any())
        {
            <ul>
                @foreach (var qualification in Model.Qualifications)
                {
                    <li class="qualification-item">
                        <img src="~/images/check.png" alt="check Icon">
                        <span>@qualification.Description</span>
                    </li>
                }
            </ul>
        }
        else
        {
            <p>No qualifications found.</p>
        }
    </div>

    <div class="job-responsibilities">
        <h5>Job Responsibilities</h5>
        @if (Model.Responsibilities != null && Model.Responsibilities.Any())
        {
            <ul>
                @foreach (var responsibility in Model.Responsibilities)
                {
                    <li class="responsibility-item">
                        <img src="~/images/check.png" alt="check Icon">
                        <span>@responsibility.Description</span>
                    </li>
                }
            </ul>
        }
        else
        {
            <p>No responsibilities found.</p>
        }
    </div>
</div>


