@model Basecode.Data.ViewModels.JobOpeningViewModel


<style>
    .form-container {
        max-width: 500px;
        margin: 0 auto;
        padding: 20px;
        background-color: #fff;
        border: 1px solid #F3F4F6FF;
        border-radius: 10px;
    }

    .form-title {
        font-size: 24px;
        font-weight: bold;
        margin-bottom: 1.5rem;
        margin-top: 1.5rem;
        text-align: center;
    }

    .form-label {
        font-weight: bold;
    }

    .form-control {
        margin-bottom: 15px;
    }

    .form-group.big-padding textarea {
        padding: 20px;
    }

    .form-actions {
        display: flex;
        justify-content: space-between;
        margin-top: 20px;
    }

    .preview-btn {
        background-color: #4CAF50;
        color: white;
    }

    .cancel-btn {
        background-color: #f44336;
        color: white;
    }

    .publish-btn {
        background-color: #f44336;
        color: white;
    }

    .quali-res{
        margin-top: 1rem;
        margin-bottom: 1rem;
    }

    .custom-control {
        display: block;
        width: 100%;
        padding: 0.375rem 0.75rem;
        font-size: 0.7rem;
        font-weight: 400;
        line-height: 1.5;
        color: #212529;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #ced4da;
        -moz-appearance: none;
        border-radius: 0.25rem;
        transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
    }

   .head-title {
        margin-bottom: 0.5rem;
        font-size: 20px;
    }

    option {
        font-size: 0.7rem;
        font-size: 14px;
    }

    label {
        font-size: 17px;
    }

    .custom-control {
        width: 100%;
        border: 1px solid black;
        padding: 10px 10px;
        margin: 5px 0;
        box-sizing: border-box;
    }

    .side-double {
        display: flex;
        justify-content: space-between;
        gap: 1rem;
    }


        .side-double * {
            flex-grow: 1;
        }

        .side-double .form-control {
            margin: 0;
        }
</style>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <h2 class="form-title">Add New Job Opening</h2>
            <div class="form-container">
                <h5 class="head-title">Job Information</h5>

                <form asp-controller="Job" asp-action="Create" method="post">
                    <div class="form-group">
                        <label asp-for="Title">Job Title</label>
                        <input type="text" asp-for="Title" class="custom-control" placeholder = "Software Developer" required />
                        <span asp-validation-for="Title" class="text-danger"></span>
                    </div>
                    <div class="form-group side-double">
                        <div class="d-flex flex-column">
                            <label asp-for="EmploymentType">Employment Type</label>
                            <select name="EmploymentType" asp-for="EmploymentType" class="custom-control" required>
                                <option value="">Select an employment type</option>
                                <option value="Full-time">Full-time</option>
                                <option value="Part-time">Part-time</option>
                                <option value="Contract">Contract</option>
                            </select>
                            <span asp-validation-for="EmploymentType" class="text-danger"></span>
                        </div>
                        <div class="d-flex flex-column">
                            <label asp-for="Location">Job Location</label>
                            <input type="text" asp-for="Location" class="custom-control" required/>
                            <span asp-validation-for="Location" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="form-group side-double">
                        <div class="d-flex flex-column">
                            <label asp-for="WorkSetup">Work Setup</label>
                            <select name="WorkSetup" asp-for="WorkSetup" class="custom-control" required>
                                <option value="">Select a work setup</option>
                                <option value="Remote">Remote</option>
                                <option value="On-site">On-site</option>
                                <option value="Hybrid">Hybrid</option>
                            </select>
                            <span asp-validation-for="WorkSetup" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="quali-res">
                        <div class=" mb-2">
                            <label asp-for="Qualifications">Qualifications</label>
                            <button style="margin-left:29px; border:none; background-color: #DA2C43" id="addQualificationBtn" type="button" class="btn btn-primary ms-3">+</button>
                        </div>
                        <span asp-validation-for="Qualifications" class="text-danger"></span>
                        <div id="qualifications-list">
                            @if (Model.Qualifications != null)
                            {
                                for (int i = 0; i < Model.Qualifications.Count; i++)
                                {
                                    <input type="text" asp-for="Qualifications[i].Description" class="custom-control qualification-input" />
                                }
                            }
                        </div>
                    </div>

                    <div class="quali-res">
                        <div class="mb-2">
                            <label asp-for="Responsibilities">Responsibilities</label>
                            <button style="background-color: #DA2C43; border:none" id="addResponsibilityBtn" type="button" class="btn btn-primary ms-3">+</button>
                        </div>
                        <span asp-validation-for="Responsibilities" class="text-danger"></span>
                        <div id="responsibilities-list">
                            @if (Model.Responsibilities != null)
                            {
                                for (int i = 0; i < Model.Responsibilities.Count; i++)
                                {
                                    <input type="text" asp-for="Responsibilities[i].Description" class="custom-control responsibility-input"/>
                                }
                            }
                        </div>
                    </div>
                    <div class="d-flex justify-content-between">
                        <a asp-action="Index">
                            <button type="button" asp-action="Index" class="btn btn-secondary">Cancel</button>
                        </a>
                        <button type="submit" style="background-color: #DA2C43" class="btn publish-btn">Create</button>
                    </div>
                   
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    // Function to add a new input field to the list
    function addInputField(containerId, inputClass, inputName) {
        var container = document.getElementById(containerId);
        var inputContainer = document.createElement("div");
        inputContainer.className = "input-container d-flex align-items-center mb-2 ";
        var inputField = document.createElement("input");
        inputField.type = "text";
        inputField.className = "custom-control " + inputClass;
        inputField.name = inputName + "[" + container.childElementCount + "].Description";
        inputField.placeholder = "Please enter something...";
        var deleteButton = document.createElement("button");
        deleteButton.type = "button";
        deleteButton.className = "btn btn-danger delete-btn";
        deleteButton.textContent = "-";
        deleteButton.addEventListener("click", function () {
            inputContainer.remove();
        });
        inputContainer.appendChild(inputField);
        inputContainer.appendChild(deleteButton);
        container.appendChild(inputContainer);
    }

    // Add event listeners to the buttons
    var addQualificationBtn = document.getElementById("addQualificationBtn");
    addQualificationBtn.addEventListener("click", function () {
        addInputField("qualifications-list", "qualification-input me-2", "Qualifications");
    });

    var addResponsibilityBtn = document.getElementById("addResponsibilityBtn");
    addResponsibilityBtn.addEventListener("click", function () {
        addInputField("responsibilities-list", "responsibility-input me-2", "Responsibilities");
    });
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

